{"version":3,"sources":["Form.tsx","Item.tsx","List.tsx","App.tsx","index.tsx"],"names":["Form","addToDo","useState","value","setValue","id","onSubmit","e","preventDefault","undefined","alert","type","onChange","target","Item","content","deleteToDo","isDone","setIsDone","textDecoration","style","onClick","List","toDos","className","map","toDo","index","key","App","shortid","generate","setToDos","copyToDos","slice","deleteIndex","findIndex","splice","ReactDOM","render","document","getElementById"],"mappings":"6MAkCeA,EA5BF,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAAyB,EACbC,mBAAS,IADI,mBAChCC,EADgC,KACzBC,EADyB,KAavC,OACE,0BAAMC,GAAG,QAAQC,SAXE,SAACC,GAEpB,GADAA,EAAEC,iBACY,KAAVL,QAA0BM,IAAVN,EAClB,OAAOO,MAAM,sEAEfT,EAAQE,GAERC,EAAS,MAIT,QAEE,2BACEO,KAAK,OACLC,SAAU,SAAAL,GACRH,EAASG,EAAEM,OAAOV,QAEpBA,MAAOA,IAET,kDCISW,EAzBF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,WAAYX,EAAoB,EAApBA,GAAoB,EAC3BH,oBAAS,GADkB,mBAChDe,EADgD,KACxCC,EADwC,KAGjDC,EAAyB,CAC7BA,eAAgBF,EAAS,eAAiB,QAO5C,OACE,4BACE,2BACEN,KAAK,WACLC,SAAU,WACRM,GAAWD,MAGf,0BAAMG,MAAOD,GAAiBJ,GAC9B,4BAAQM,QAbS,WACnBL,EAAWX,KAYT,kBCLSiB,G,MAZF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOP,EAA4B,EAA5BA,WACrB,OACE,wBAAIQ,UAAU,QACXD,EAAME,KAAI,SAACC,EAAMC,GAChB,OACE,kBAAC,EAAD,CAAMZ,QAASW,EAAKX,QAASa,IAAKD,EAAOX,WAAYA,EAAYX,GAAIqB,EAAKrB,WCyCrEwB,EA/CH,WAAO,IAAD,EACU3B,mBAAiB,CACzC,CACEa,QAAS,iCACTV,GAAIyB,IAAQC,YAEd,CACEhB,QAAS,iCACTV,GAAIyB,IAAQC,YAEd,CACEhB,QAAS,iCACTV,GAAIyB,IAAQC,cAZA,mBACTR,EADS,KACFS,EADE,KAsChB,OACE,oCACE,wCACA,kBAAC,EAAD,CAAM/B,QAzBM,SAACc,GACfiB,EAAS,GAAD,mBACHT,GADG,CAEN,CACER,QAASA,EACTV,GAAIyB,IAAQC,kBAqBd,kBAAC,EAAD,CAAMR,MAAOA,EAAOP,WAhBL,SAACX,GAClB,IAAM4B,EAAYV,EAAMW,QACxBxB,MAAML,EAAK,iBAEX,IAAM8B,EAAsBF,EAAUG,WAAU,SAAAV,GAC9C,OAAOA,EAAKrB,KAAOA,KAGrB4B,EAAUI,OAAOF,EAAa,GAC9BH,EAASC,QCzCbK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2c18c74a.chunk.js","sourcesContent":["import React, { useState, FormEvent } from 'react';\n\ninterface FormProps {\n  addToDo: Function;\n}\n\nconst Form = ({ addToDo }: FormProps) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = (e: FormEvent<Element>) => {\n    e.preventDefault();\n    if (value === '' || value === undefined) {\n      return alert('文字を入力して下さい。');\n    }\n    addToDo(value);\n\n    setValue('');\n  };\n\n  return (\n    <form id='clear' onSubmit={handleSubmit}>\n      ToDo:\n      <input\n        type='text'\n        onChange={e => {\n          setValue(e.target.value);\n        }}\n        value={value}\n      />\n      <button>送信</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState } from 'react';\n\ninterface ItemProps {\n  content: string;\n  deleteToDo: Function;\n  id: string;\n}\n\nconst Item = ({ content, deleteToDo, id }: ItemProps) => {\n  const [isDone, setIsDone] = useState(false);\n\n  const textDecoration: object = {\n    textDecoration: isDone ? 'line-through' : 'none',\n  };\n\n  const handleDelete = (): void => {\n    deleteToDo(id);\n  };\n\n  return (\n    <li>\n      <input\n        type='checkbox'\n        onChange={(): void => {\n          setIsDone(!isDone);\n        }}\n      />\n      <span style={textDecoration}>{content}</span>\n      <button onClick={handleDelete}>削除</button>\n    </li>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport Item from './Item';\nimport { ToDo } from './App';\n\nimport './sass/list.styles.scss';\n\ninterface ListProps {\n  toDos: ToDo[];\n  deleteToDo: (id: string) => void;\n}\n\nconst List = ({ toDos, deleteToDo }: ListProps) => {\n  return (\n    <ul className='list'>\n      {toDos.map((toDo, index) => {\n        return (\n          <Item content={toDo.content} key={index} deleteToDo={deleteToDo} id={toDo.id} />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport Form from './Form';\nimport List from './List';\n\nexport interface ToDo {\n  content: string;\n  id: string;\n}\n\nconst App = () => {\n  const [toDos, setToDos] = useState<ToDo[]>([\n    {\n      content: '課題をする',\n      id: shortid.generate(),\n    },\n    {\n      content: '洗濯をする',\n      id: shortid.generate(),\n    },\n    {\n      content: '電話をする',\n      id: shortid.generate(),\n    },\n  ]);\n\n  const addToDo = (content: string): void => {\n    setToDos([\n      ...toDos,\n      {\n        content: content,\n        id: shortid.generate(),\n      },\n    ]);\n  };\n\n  const deleteToDo = (id: string): void => {\n    const copyToDos = toDos.slice();\n    alert(id + ' is deleted!!');\n\n    const deleteIndex: number = copyToDos.findIndex(toDo => {\n      return toDo.id === id;\n    });\n\n    copyToDos.splice(deleteIndex, 1);\n    setToDos(copyToDos);\n  };\n\n  return (\n    <>\n      <h1>ToDo App</h1>\n      <Form addToDo={addToDo} />\n      <List toDos={toDos} deleteToDo={deleteToDo} />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}